[
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/98",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/98/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/98/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/98/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/98",
    "id": 45164122,
    "number": 98,
    "title": "Rails 4 blocker update_all may ignore condition with db_charmer !!",
    "user": {
      "login": "AvnerCohen",
      "id": 1297254,
      "avatar_url": "https://avatars.githubusercontent.com/u/1297254?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AvnerCohen",
      "html_url": "https://github.com/AvnerCohen",
      "followers_url": "https://api.github.com/users/AvnerCohen/followers",
      "following_url": "https://api.github.com/users/AvnerCohen/following{/other_user}",
      "gists_url": "https://api.github.com/users/AvnerCohen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AvnerCohen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AvnerCohen/subscriptions",
      "organizations_url": "https://api.github.com/users/AvnerCohen/orgs",
      "repos_url": "https://api.github.com/users/AvnerCohen/repos",
      "events_url": "https://api.github.com/users/AvnerCohen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AvnerCohen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-10-07T20:42:29Z",
    "updated_at": "2014-10-07T20:42:29Z",
    "closed_at": null,
    "body": "First thing first, thanks for making this gem and putting the effort into it! :bow: \r\n...\r\n\r\nTo the issue, it might just be that this is a combination of an old code being upgraded from Rails 3 to Rails 4, But it is extremely dangerous.\r\n\r\nConsider the following console code:\r\n\r\n````ruby\r\nâ€º rails c\r\nLoading development environment (Rails 4.1.6)\r\n2.1.2 :001 > Test.update_all({updated_at: Time.now}, {somevalue: 123})\r\nArgumentError: wrong number of arguments (2 for 1)\r\n    from ./gems/activerecord-4.1.6/lib/active_record/relation.rb:316:in `update_all'\r\n    from ./bundler/gems/db-charmer-cb40007c36e2/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:128:in `block in update_all_with_db_charmer'\r\n    from ./bundler/gems/db-charmer-cb40007c36e2/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:103:in `block in switch_connection_for_method'\r\n    from ./bundler/gems/db-charmer-cb40007c36e2/lib/db_charmer/active_record/multi_db_proxy.rb:37:in `on_db'\r\n    from ./bundler/gems/db-charmer-cb40007c36e2/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:102:in `switch_connection_for_method'\r\n    from ./bundler/gems/db-charmer-cb40007c36e2/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:127:in `update_all_with_db_charmer'\r\n    from ./gems/activerecord-4.1.6/lib/active_record/querying.rb:8:in `update_all'\r\n    from (irb):1\r\n    from ./gems/railties-4.1.6/lib/rails/commands/console.rb:90:in `start'\r\n    from ./gems/railties-4.1.6/lib/rails/commands/console.rb:9:in `start'\r\n    from ./gems/railties-4.1.6/lib/rails/commands/commands_tasks.rb:69:in `console'\r\n    from ./gems/railties-4.1.6/lib/rails/commands/commands_tasks.rb:40:in `run_command!'\r\n    from ./gems/railties-4.1.6/lib/rails/commands.rb:17:in `<top (required)>'\r\n    from bin/rails:8:in `require'\r\n    from bin/rails:8:in `<main>'\r\n2.1.2 :002 > Test.update_all({updated_at: Time.now})\r\n  SQL (0.5ms)  UPDATE \"tests\" SET \"updated_at\" = '2014-10-07 20:34:07.694313'\r\n => 0\r\n2.1.2 :003 > Test.update_all({updated_at: Time.now}, {somevalue: 123})\r\n  SQL (0.2ms)  UPDATE \"tests\" SET \"updated_at\" = '2014-10-07 20:34:12.975116'\r\n => 0\r\n\r\n````\r\nGemfile is simply:\r\n\r\n`````ruby\r\nsource 'https://rubygems.org'\r\n\r\ngem 'rails', '4.1.6'\r\n\r\ngem 'sqlite3'\r\n\r\ngem 'db-charmer',\r\n  :git => 'git@github.com:kovyrin/db-charmer.git',\r\n  :branch => 'rails4', :ref => 'cb40007c36e2847850a37a490850cfd822016c5f', :require => 'db_charmer'\r\n````\r\n\r\n\r\n\r\nDescribing the issue:\r\n\r\n1. Calling update_all with wrong params (arity changed to 1 on rails 4) failes as expected.\r\n2. Enough to have a single update_all that passed succesfully.\r\n3. Next execution of wrong params (as [1] above) passes succesfully and arity check is ignored + conditions are totally ignored."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/97",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/97/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/97/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/97/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/97",
    "id": 38187982,
    "number": 97,
    "title": "DB connections not closing properly",
    "user": {
      "login": "nchafai",
      "id": 436617,
      "avatar_url": "https://avatars.githubusercontent.com/u/436617?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nchafai",
      "html_url": "https://github.com/nchafai",
      "followers_url": "https://api.github.com/users/nchafai/followers",
      "following_url": "https://api.github.com/users/nchafai/following{/other_user}",
      "gists_url": "https://api.github.com/users/nchafai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nchafai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nchafai/subscriptions",
      "organizations_url": "https://api.github.com/users/nchafai/orgs",
      "repos_url": "https://api.github.com/users/nchafai/repos",
      "events_url": "https://api.github.com/users/nchafai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nchafai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-07-18T15:47:56Z",
    "updated_at": "2014-07-21T07:17:26Z",
    "closed_at": "2014-07-21T07:16:55Z",
    "body": "Hi,\r\n\r\nWe are using db-charmer to handle distributed data accross multiple databases. However, connections are not closing properly when requests are made on a sharded database : hundreds of connections remain opened. \r\n\r\nAfter investigations, this situation is due to `abstract_connection_class_name` used to reference connections in `ConnectionPool` list : as long as different threads occur, a new connection is added in the pool list since `abstract_connection_class_name` is using the Thread id : \r\n```ruby\r\ndef self.abstract_connection_class_name(connection_name)\r\n  conn_name_klass = connection_name.to_s.gsub(/\\W+/, '_').camelize\r\n  thread = Thread.current.object_id.abs # need to make sure it is non-negative\r\n  \"::AutoGeneratedAbstractConnectionClass#{conn_name_klass}ForThread#{thread}\"\r\nend\r\n```\r\n\r\nIf we just use ` \"::AutoGeneratedAbstractConnectionClass#{conn_name_klass}ForThread\"` without the `#{thread}` suffix part, everything looks fine, and connections are properly closed. \r\n\r\nSo, what is the exact purpose of having introduce this `#{thread}` suffix ? (this suffix is not present in the previous versions of db-charmer)"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/96",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/96/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/96/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/96/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/96",
    "id": 35993889,
    "number": 96,
    "title": "[Rails 4] rake db:migrate:redo doesn't redo all migrations",
    "user": {
      "login": "akshetpandey",
      "id": 1213060,
      "avatar_url": "https://avatars.githubusercontent.com/u/1213060?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akshetpandey",
      "html_url": "https://github.com/akshetpandey",
      "followers_url": "https://api.github.com/users/akshetpandey/followers",
      "following_url": "https://api.github.com/users/akshetpandey/following{/other_user}",
      "gists_url": "https://api.github.com/users/akshetpandey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akshetpandey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akshetpandey/subscriptions",
      "organizations_url": "https://api.github.com/users/akshetpandey/orgs",
      "repos_url": "https://api.github.com/users/akshetpandey/repos",
      "events_url": "https://api.github.com/users/akshetpandey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akshetpandey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-06-18T14:58:18Z",
    "updated_at": "2014-07-08T00:00:58Z",
    "closed_at": "2014-07-08T00:00:58Z",
    "body": "I am using the rails 4 branch with rails 4. The migrations work fine but when I try to redo the migrations, only the last two migrations are picked for redo."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/95",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/95/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/95/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/95/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/95",
    "id": 35756037,
    "number": 95,
    "title": "Rails 4.1+",
    "user": {
      "login": "richpeck",
      "id": 1104431,
      "avatar_url": "https://avatars.githubusercontent.com/u/1104431?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richpeck",
      "html_url": "https://github.com/richpeck",
      "followers_url": "https://api.github.com/users/richpeck/followers",
      "following_url": "https://api.github.com/users/richpeck/following{/other_user}",
      "gists_url": "https://api.github.com/users/richpeck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richpeck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richpeck/subscriptions",
      "organizations_url": "https://api.github.com/users/richpeck/orgs",
      "repos_url": "https://api.github.com/users/richpeck/repos",
      "events_url": "https://api.github.com/users/richpeck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richpeck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 7,
    "created_at": "2014-06-15T19:23:32Z",
    "updated_at": "2014-11-03T15:25:13Z",
    "closed_at": null,
    "body": "Any chance we could get an updated ver to work with ActiveSupport 4.1+? \r\n\r\nIt's not compatible with the latest version of Rails otherwise :("
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/94",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/94/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/94/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/94/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/94",
    "id": 28744882,
    "number": 94,
    "title": "Fix #93 Keep slave connections thread local.",
    "user": {
      "login": "gworley3",
      "id": 809976,
      "avatar_url": "https://avatars.githubusercontent.com/u/809976?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gworley3",
      "html_url": "https://github.com/gworley3",
      "followers_url": "https://api.github.com/users/gworley3/followers",
      "following_url": "https://api.github.com/users/gworley3/following{/other_user}",
      "gists_url": "https://api.github.com/users/gworley3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gworley3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gworley3/subscriptions",
      "organizations_url": "https://api.github.com/users/gworley3/orgs",
      "repos_url": "https://api.github.com/users/gworley3/repos",
      "events_url": "https://api.github.com/users/gworley3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gworley3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-04T21:57:32Z",
    "updated_at": "2014-03-04T21:57:32Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/94",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/94",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/94.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/94.patch"
    },
    "body": "This is probably not an ideal fix for #93 but it seems to work."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/93",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/93/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/93/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/93/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/93",
    "id": 28739552,
    "number": 93,
    "title": "Multi-threaded race conditions with Postgres",
    "user": {
      "login": "gworley3",
      "id": 809976,
      "avatar_url": "https://avatars.githubusercontent.com/u/809976?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gworley3",
      "html_url": "https://github.com/gworley3",
      "followers_url": "https://api.github.com/users/gworley3/followers",
      "following_url": "https://api.github.com/users/gworley3/following{/other_user}",
      "gists_url": "https://api.github.com/users/gworley3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gworley3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gworley3/subscriptions",
      "organizations_url": "https://api.github.com/users/gworley3/orgs",
      "repos_url": "https://api.github.com/users/gworley3/repos",
      "events_url": "https://api.github.com/users/gworley3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gworley3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-04T20:52:19Z",
    "updated_at": "2014-07-09T00:38:31Z",
    "closed_at": null,
    "body": "Trying to use db-charmer 1.9.0 with Postgres and rails 3.2.17. Db-charmer works fine with this setup when single threaded. Running multiple threads via Sidekiq, I get the following error:\r\n\r\n```\r\n2014-03-04T20:28:37Z 40445 TID-ox250opo8 WARN: undefined method `fields' for nil:NilClass\r\n2014-03-04T20:28:37Z 40445 TID-ox250opo8 WARN: /Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/postgresql_adapter.rb:664:in `block in exec_query'\r\n```\r\n\r\nI believe I have traced this down to the way `PostgresqlAdapter` works in Rails. If you dig around in its code you'll find that it makes async calls to execute queries and expects no other query to execute on the same connection while the current query is executing. If another query comes along they end up in a race condition where one query gets a result (possibly the wrong one!) and the other gets nil.\r\n\r\nThis suggests db-charmer needs to do a better job of locking connections to particular threads so that a connection is not used by more than one thread at a time.\r\n\r\nFull stack trace for the curious:\r\n\r\n```\r\n2014-03-04T20:28:37Z 40445 TID-ox250opo8 WARN: {\"retry\"=>5, \"queue\"=>\"low_linkedin_metrics\", \"failures\"=>\"exhausted\", \"class\"=>\"MetricsWorker::Linkedin::ImportAdMetrics\", \"args\"=>[1, \"2013-02-09..2013-02-09\"], \"jid\"=>\"e968f2b5935d884385911a83\", \"enqueued_at\"=>1393960671.074003, \"error_message\"=>\"undefined method `fields' for nil:NilClass\", \"error_class\"=>\"NoMethodError\", \"failed_at\"=>1393964917.8832488, \"retry_count\"=>0}\r\n2014-03-04T20:28:37Z 40445 TID-ox250opo8 WARN: undefined method `fields' for nil:NilClass\r\n2014-03-04T20:28:37Z 40445 TID-ox250opo8 WARN: /Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/postgresql_adapter.rb:664:in `block in exec_query'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract_adapter.rb:280:in `block in log'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activesupport-3.2.17/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/abstract_adapter/connection_name.rb:14:in `instrument'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract_adapter.rb:275:in `log'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/instrumentation/active_record.rb:46:in `block in log_with_newrelic_instrumentation'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/method_tracer.rb:271:in `trace_execution_scoped'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/instrumentation/active_record.rb:43:in `log_with_newrelic_instrumentation'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/postgresql_adapter.rb:659:in `exec_query'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/postgresql_adapter.rb:1263:in `select'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract/database_statements.rb:18:in `select_all'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract/query_cache.rb:63:in `select_all'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/querying.rb:38:in `block in find_by_sql'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/explain.rb:41:in `logging_query_plan'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/querying.rb:37:in `find_by_sql'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/master_slave_routing.rb:13:in `block in find_by_sql'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:71:in `first_level_on_slave'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/master_slave_routing.rb:12:in `find_by_sql'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/method_tracer.rb:521:in `block in find_by_sql_with_trace_ActiveRecord_self_name_find_by_sql'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/method_tracer.rb:271:in `trace_execution_scoped'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/method_tracer.rb:516:in `find_by_sql_with_trace_ActiveRecord_self_name_find_by_sql'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation.rb:171:in `exec_queries'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation.rb:160:in `block in to_a'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/explain.rb:34:in `logging_query_plan'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation.rb:159:in `to_a'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:123:in `block in to_a_with_db_charmer'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:113:in `block in switch_connection_for_method'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:69:in `block in first_level_on_slave'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:40:in `on_db'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:59:in `on_slave'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:69:in `first_level_on_slave'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:112:in `switch_connection_for_method'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation/connection_routing.rb:122:in `to_a_with_db_charmer'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation/finder_methods.rb:381:in `find_first'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation/finder_methods.rb:122:in `first'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation/finder_methods.rb:267:in `find_by_attributes'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/dynamic_matchers.rb:50:in `method_missing'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation/delegation.rb:14:in `block in find_by_id'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation.rb:241:in `block in scoping'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/scoping.rb:98:in `with_scope'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation.rb:241:in `scoping'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/activerecord-3.2.17/lib/active_record/relation/delegation.rb:14:in `find_by_id'\r\n/Users/gworley3/github/adstage/adstage-platform-v2/app/workers/metrics_worker/linkedin/import_ad_metrics.rb:9:in `block in perform'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/db-charmer-1.9.0/lib/db_charmer/force_slave_reads.rb:50:in `force_slave_reads'\r\n/Users/gworley3/github/adstage/adstage-platform-v2/app/workers/metrics_worker/linkedin/import_ad_metrics.rb:8:in `perform'\r\n(eval):3:in `block in perform_with_newrelic_transaction_trace'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:318:in `perform_action_with_newrelic_trace'\r\n(eval):2:in `perform_with_newrelic_transaction_trace'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/processor.rb:49:in `block (3 levels) in process'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:122:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:122:in `block in invoke'\r\n/Users/gworley3/github/adstage/adstage-platform-v2/config/initializers/sidekiq.rb:9:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/instrumentation/sidekiq.rb:25:in `block in call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:318:in `perform_action_with_newrelic_trace'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/newrelic_rpm-3.6.4.122/lib/new_relic/agent/instrumentation/sidekiq.rb:21:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-unique-jobs-2.7.1/lib/sidekiq-unique-jobs/middleware/server/unique_jobs.rb:14:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-failures-0.3.0/lib/sidekiq/failures/middleware.rb:10:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-pro-1.4.3/lib/sidekiq/batch/middleware.rb:26:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/server/active_record.rb:6:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/server/retry_jobs.rb:62:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/server/logging.rb:11:in `block in call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/logging.rb:22:in `with_context'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/server/logging.rb:7:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:124:in `block in invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:127:in `call'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/middleware/chain.rb:127:in `invoke'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/processor.rb:48:in `block (2 levels) in process'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/processor.rb:105:in `stats'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/processor.rb:47:in `block in process'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/processor.rb:86:in `do_defer'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/sidekiq-2.17.6/lib/sidekiq/processor.rb:37:in `process'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/calls.rb:25:in `public_send'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/calls.rb:25:in `dispatch'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/calls.rb:122:in `dispatch'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/actor.rb:322:in `block in handle_message'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/actor.rb:416:in `block in task'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/tasks.rb:55:in `block in initialize'\r\n/Users/gworley3/.rvm/gems/ruby-2.0.0-p247@platform-v2/gems/celluloid-0.15.2/lib/celluloid/tasks/task_fiber.rb:13:in `block in create'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/92",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/92/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/92/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/92/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/92",
    "id": 28669704,
    "number": 92,
    "title": "habtm associations support  broken in rails 4 branch.",
    "user": {
      "login": "bobbarjung",
      "id": 1243200,
      "avatar_url": "https://avatars.githubusercontent.com/u/1243200?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobbarjung",
      "html_url": "https://github.com/bobbarjung",
      "followers_url": "https://api.github.com/users/bobbarjung/followers",
      "following_url": "https://api.github.com/users/bobbarjung/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobbarjung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobbarjung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobbarjung/subscriptions",
      "organizations_url": "https://api.github.com/users/bobbarjung/orgs",
      "repos_url": "https://api.github.com/users/bobbarjung/repos",
      "events_url": "https://api.github.com/users/bobbarjung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobbarjung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-04T00:18:47Z",
    "updated_at": "2014-07-29T14:40:22Z",
    "closed_at": null,
    "body": "Hi I have a connection to a recovery database and a habtm relationship between two models.\r\n\r\n```ruby\r\nclass Line\r\n  has_and_belongs_to_many: nodes\r\nend\r\n\r\nclass Node\r\n  has_and_belongs_to_many :lines\r\nend\r\n```\r\n\r\nI could access these relationships on the secondary database through db_charmer magic.\r\n\r\n```ruby\r\na = Node.on_db(:recovery).first\r\na.on_db(:recovery).lines.each {|b| < do stuff with b> }\r\n```\r\n\r\nBut with rails 4 branch of db_charmer gem (2.0.0.dev1)\r\n\r\nI simply get the following \r\n\r\n```\r\nirb(main):034:0> a.on_db(:recovery).lines\r\nirb(main):034:0># ActiveRecord::Associations::CollectionProxy []\r\n```\r\n\r\nAny interim way to get around this issue will also be appreciated."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/91",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/91/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/91/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/91/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/91",
    "id": 28574942,
    "number": 91,
    "title": "can't query against the default db on_db(:default)",
    "user": {
      "login": "ohadpartuck",
      "id": 2236337,
      "avatar_url": "https://avatars.githubusercontent.com/u/2236337?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohadpartuck",
      "html_url": "https://github.com/ohadpartuck",
      "followers_url": "https://api.github.com/users/ohadpartuck/followers",
      "following_url": "https://api.github.com/users/ohadpartuck/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohadpartuck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohadpartuck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohadpartuck/subscriptions",
      "organizations_url": "https://api.github.com/users/ohadpartuck/orgs",
      "repos_url": "https://api.github.com/users/ohadpartuck/repos",
      "events_url": "https://api.github.com/users/ohadpartuck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohadpartuck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-02T07:33:20Z",
    "updated_at": "2014-03-02T09:53:04Z",
    "closed_at": "2014-03-02T09:52:28Z",
    "body": "```ruby \r\ndevelopment: &development\r\n  database: app_dev\r\n  host: masterdb\r\n  <<: *defaults\r\n\r\n  slave:\r\n    <<: *defaults\r\n    host: slavedb01\r\n```\r\n\r\nthen trying to force a query against master\r\n``` MyModel.on_db(:default) ```\r\neven tried \r\n``` MyModel.on_master ```\r\n\r\nBut there is no specific querying against any db.\r\n"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/90",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/90/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/90/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/90/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/90",
    "id": 28014934,
    "number": 90,
    "title": "RuntimeError: can't add a new key into hash during iteration",
    "user": {
      "login": "mhfs",
      "id": 78422,
      "avatar_url": "https://avatars.githubusercontent.com/u/78422?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhfs",
      "html_url": "https://github.com/mhfs",
      "followers_url": "https://api.github.com/users/mhfs/followers",
      "following_url": "https://api.github.com/users/mhfs/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhfs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhfs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhfs/subscriptions",
      "organizations_url": "https://api.github.com/users/mhfs/orgs",
      "repos_url": "https://api.github.com/users/mhfs/repos",
      "events_url": "https://api.github.com/users/mhfs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhfs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 12,
    "created_at": "2014-02-21T02:38:17Z",
    "updated_at": "2014-06-03T23:26:05Z",
    "closed_at": null,
    "body": "Hey @kovyrin ,\r\n\r\nI think I might have found a multi-threading bug. Throwing it here to see it rings any bells.\r\n\r\nI'm processing a high volume of quick sidekiq jobs and part of it is performing a query like this:\r\n\r\n```ruby\r\nUser.on_db(:bbdb).find(user_id)\r\n```\r\n\r\nIm' seeing lot's of errors like this:\r\n\r\n```\r\nRuntimeError: can't add a new key into hash during iteration\r\n```\r\nI'm using ruby 2.0.0p353, rails 3.217 and db-charmer 1.9.0 as you can see in the full backtrace below.\r\n\r\nDoes that rings any bells for you?\r\n\r\nThanks in advance.\r\n\r\n```\r\n/vendor/ruby/2.0.0/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract/connection_pool.rb:375 in \"[]=\"\r\n/vendor/ruby/2.0.0/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract/connection_pool.rb:375 in \"establish_connection\"\r\n/vendor/ruby/2.0.0/gems/activerecord-3.2.17/lib/active_record/connection_adapters/abstract/connection_specification.rb:137 in \"establish_connection\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/active_record/connection_switching.rb:25 in \"establish_real_connection_if_exists\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/connection_factory.rb:51 in \"generate_abstract_class\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/connection_factory.rb:35 in \"establish_connection\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/connection_factory.rb:24 in \"connect\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/active_record/connection_switching.rb:66 in \"coerce_to_connection_proxy\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/active_record/connection_switching.rb:82 in \"switch_connection_to\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:39 in \"on_db\"\r\n/vendor/ruby/2.0.0/gems/db-charmer-1.9.0/lib/db_charmer/active_record/multi_db_proxy.rb:19 in \"method_missing\"\r\n/app/jobs/backfill_stats_job.rb:7 in \"perform\"\r\n```"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/89",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/89/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/89/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/89/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/89",
    "id": 27979122,
    "number": 89,
    "title": "force_slave_reads option ignored",
    "user": {
      "login": "gworley3",
      "id": 809976,
      "avatar_url": "https://avatars.githubusercontent.com/u/809976?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gworley3",
      "html_url": "https://github.com/gworley3",
      "followers_url": "https://api.github.com/users/gworley3/followers",
      "following_url": "https://api.github.com/users/gworley3/following{/other_user}",
      "gists_url": "https://api.github.com/users/gworley3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gworley3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gworley3/subscriptions",
      "organizations_url": "https://api.github.com/users/gworley3/orgs",
      "repos_url": "https://api.github.com/users/gworley3/repos",
      "events_url": "https://api.github.com/users/gworley3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gworley3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-02-20T17:19:06Z",
    "updated_at": "2014-02-20T17:41:46Z",
    "closed_at": "2014-02-20T17:41:46Z",
    "body": "I set `:force_slave_reads => false` in the `db_magic` opts but still reads from slaves by default."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/88",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/88/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/88/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/88/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/88",
    "id": 24576212,
    "number": 88,
    "title": "Skip HasAndBelongsToMany preloader for Rails 4.1",
    "user": {
      "login": "kmcbride",
      "id": 597435,
      "avatar_url": "https://avatars.githubusercontent.com/u/597435?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmcbride",
      "html_url": "https://github.com/kmcbride",
      "followers_url": "https://api.github.com/users/kmcbride/followers",
      "following_url": "https://api.github.com/users/kmcbride/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmcbride/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmcbride/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmcbride/subscriptions",
      "organizations_url": "https://api.github.com/users/kmcbride/orgs",
      "repos_url": "https://api.github.com/users/kmcbride/repos",
      "events_url": "https://api.github.com/users/kmcbride/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmcbride/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-12-19T18:31:26Z",
    "updated_at": "2014-06-11T19:21:31Z",
    "closed_at": "2014-06-11T19:21:31Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/88",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/88",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/88.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/88.patch"
    },
    "body": "See: https://github.com/rails/rails/commit/a03ea3ff97b43340d0904525083bf8bc7a1c6ebc"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/87",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/87/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/87/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/87/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/87",
    "id": 24129460,
    "number": 87,
    "title": "Make database rake auto load on rails",
    "user": {
      "login": "arthurnn",
      "id": 833383,
      "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurnn",
      "html_url": "https://github.com/arthurnn",
      "followers_url": "https://api.github.com/users/arthurnn/followers",
      "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurnn/orgs",
      "repos_url": "https://api.github.com/users/arthurnn/repos",
      "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-12-11T19:02:34Z",
    "updated_at": "2013-12-12T23:09:55Z",
    "closed_at": "2013-12-12T23:08:46Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/87",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/87",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/87.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/87.patch"
    },
    "body": "@kovyrin \r\n\r\nWe need to load the rake task on `Rails::Railtie`, otherwise they wont be available when just adding the Gem.\r\n\r\nlet me know what you think.\r\n\r\ncheers,"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/86",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/86/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/86/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/86/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/86",
    "id": 23877630,
    "number": 86,
    "title": "Allow AR::B.db_magic m/s split to work with abstract AR classes.",
    "user": {
      "login": "perplexes",
      "id": 13812,
      "avatar_url": "https://avatars.githubusercontent.com/u/13812?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/perplexes",
      "html_url": "https://github.com/perplexes",
      "followers_url": "https://api.github.com/users/perplexes/followers",
      "following_url": "https://api.github.com/users/perplexes/following{/other_user}",
      "gists_url": "https://api.github.com/users/perplexes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/perplexes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/perplexes/subscriptions",
      "organizations_url": "https://api.github.com/users/perplexes/orgs",
      "repos_url": "https://api.github.com/users/perplexes/repos",
      "events_url": "https://api.github.com/users/perplexes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/perplexes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-12-06T18:56:28Z",
    "updated_at": "2013-12-06T18:56:28Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/86",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/86",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/86.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/86.patch"
    },
    "body": "Hi, ran into a SystemStackError. We wanted to split all reads in all models to slaves. The easiest way to do this seemed like:\r\n\r\nIn config/initializers/db_charmer.rb:\r\n```ruby\r\nActiveRecord::Base.db_magic(slave: :main_slave)\r\n```\r\n\r\nBut we also have Rails Engines that have their own version of an AR::B-like class with a separate connection, called base:\r\n\r\n```ruby\r\nclass IsbnDb::Base < ActiveRecord::Base\r\n  self.abstract_class = true\r\n  db_magic connection: :isbn_master, slave: :isbn_slave\r\nend\r\n```\r\n\r\nThen models underneath that would inherit this connection:\r\n```ruby\r\nclass Isbn < IsbnDb::Base\r\nend\r\n```\r\n\r\nWhat we were seeing were SystemStackErrors:\r\n\r\n```ruby\r\n[3] pry(main)> Isbn.first\r\nSystemStackError: stack level too deep\r\n```\r\n\r\nAfter a lot of tracing (and set_trace_func), the culprit is that putting db_magic on ActiveRecord::Base overrides the default behavior of the master/slave automatic methods like reload, find_by_sql and count_by_sql. In models that directly inherit from AR::B (like User, say) this behavior is fine - but in level-2 inherited models (AR::B > Base > Isbn), is causes infinite recursion.\r\n\r\nThis pull request fixes this situation, but I don't quite know how to test it."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/85",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/85/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/85/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/85/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/85",
    "id": 22639819,
    "number": 85,
    "title": "Rails4 Support",
    "user": {
      "login": "kovyrin",
      "id": 3467,
      "avatar_url": "https://avatars.githubusercontent.com/u/3467?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kovyrin",
      "html_url": "https://github.com/kovyrin",
      "followers_url": "https://api.github.com/users/kovyrin/followers",
      "following_url": "https://api.github.com/users/kovyrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kovyrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kovyrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kovyrin/subscriptions",
      "organizations_url": "https://api.github.com/users/kovyrin/orgs",
      "repos_url": "https://api.github.com/users/kovyrin/repos",
      "events_url": "https://api.github.com/users/kovyrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kovyrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 16,
    "created_at": "2013-11-14T02:58:39Z",
    "updated_at": "2014-10-22T09:35:58Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/85",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/85",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/85.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/85.patch"
    },
    "body": "This PR is used to track the process of adding Rails 4 support to DbCharmer. It is not ready yet, but we are really close."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/84",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/84/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/84/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/84/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/84",
    "id": 22639397,
    "number": 84,
    "title": "License missing from gemspec",
    "user": {
      "login": "bf4",
      "id": 142914,
      "avatar_url": "https://avatars.githubusercontent.com/u/142914?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bf4",
      "html_url": "https://github.com/bf4",
      "followers_url": "https://api.github.com/users/bf4/followers",
      "following_url": "https://api.github.com/users/bf4/following{/other_user}",
      "gists_url": "https://api.github.com/users/bf4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bf4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bf4/subscriptions",
      "organizations_url": "https://api.github.com/users/bf4/orgs",
      "repos_url": "https://api.github.com/users/bf4/repos",
      "events_url": "https://api.github.com/users/bf4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bf4/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-11-14T02:46:06Z",
    "updated_at": "2013-11-14T04:18:04Z",
    "closed_at": "2013-11-14T02:57:03Z",
    "body": "  RubyGems.org doesn't report a license for your gem.  This is because it is not specified in the [gemspec](http://docs.rubygems.org/read/chapter/20#license) of your last release.\n\n  via e.g.\n\n      spec.license = 'MIT'\n      # or\n      spec.licenses = ['MIT', 'GPL-2']\n\n  Including a license in your gemspec is an easy way for rubygems.org and other tools to check how your gem is licensed.  As you can imagine, scanning your repository for a LICENSE file or parsing the README, and then attempting to identify the license or licenses is much more difficult and more error prone. So, even for projects that already specify a license, including a license in your gemspec is a good practice. See, for example, how [rubygems.org uses the gemspec to  display the rails gem license](https://rubygems.org/gems/rails).\n\n  There is even a [License Finder gem](https://github.com/pivotal/LicenseFinder) to help companies/individuals ensure all gems they use meet their licensing needs. This tool depends on license information being available in the gemspec.  This is an important enough issue that *even Bundler now generates gems with a default 'MIT' license*.\n\n  I hope you'll consider specifying a license in your gemspec. If not, please just close the issue with a nice message. In either case, I'll follow up. Thanks for your time!\n\n  Appendix:\n\n  If you need help choosing a [license](http://opensource.org/licenses) (sorry, I haven't checked your readme or looked for a license file), GitHub has created a [license picker tool](http://choosealicense.com/).  Code without a license specified defaults to 'All rights reserved'-- denying others all rights to use of the code.\n  Here's a [list of the license names I've found and their frequencies](https://github.com/bf4/gemproject/blob/master/license_usage.csv)\n\n  p.s. In case you're wondering how I found you and why I made this issue, it's because I'm collecting stats on gems (I was originally looking for download data) and decided to collect license metadata,too, and [make issues for gemspecs not specifying a license as a public service :)](https://github.com/bf4/gemproject/issues/1). See the previous link or my [blog post about this project for more information](http://www.benjaminfleischer.com/2013/07/12/make-the-world-a-better-place-put-a-license-in-your-gemspec/).\n"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/83",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/83/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/83/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/83/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/83",
    "id": 22158156,
    "number": 83,
    "title": "Gemspec updates",
    "user": {
      "login": "bradherman",
      "id": 384172,
      "avatar_url": "https://avatars.githubusercontent.com/u/384172?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bradherman",
      "html_url": "https://github.com/bradherman",
      "followers_url": "https://api.github.com/users/bradherman/followers",
      "following_url": "https://api.github.com/users/bradherman/following{/other_user}",
      "gists_url": "https://api.github.com/users/bradherman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bradherman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bradherman/subscriptions",
      "organizations_url": "https://api.github.com/users/bradherman/orgs",
      "repos_url": "https://api.github.com/users/bradherman/repos",
      "events_url": "https://api.github.com/users/bradherman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bradherman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-11-05T22:50:37Z",
    "updated_at": "2013-11-10T06:31:59Z",
    "closed_at": "2013-11-10T06:31:59Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/83",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/83",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/83.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/83.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/82",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/82/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/82/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/82/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/82",
    "id": 22002182,
    "number": 82,
    "title": "Update db-charmer.gemspec",
    "user": {
      "login": "yhuang",
      "id": 154587,
      "avatar_url": "https://avatars.githubusercontent.com/u/154587?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yhuang",
      "html_url": "https://github.com/yhuang",
      "followers_url": "https://api.github.com/users/yhuang/followers",
      "following_url": "https://api.github.com/users/yhuang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yhuang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yhuang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yhuang/subscriptions",
      "organizations_url": "https://api.github.com/users/yhuang/orgs",
      "repos_url": "https://api.github.com/users/yhuang/repos",
      "events_url": "https://api.github.com/users/yhuang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yhuang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-11-02T14:09:36Z",
    "updated_at": "2013-11-10T15:41:32Z",
    "closed_at": "2013-11-10T15:41:32Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/82",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/82",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/82.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/82.patch"
    },
    "body": "Rails 4.0.1 has been released:\r\n\r\nhttp://weblog.rubyonrails.org/2013/11/1/Rails-4-0-1-has-been-released/"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/81",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/81/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/81/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/81/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/81",
    "id": 21460804,
    "number": 81,
    "title": "Sharded connection key parameter meaning?",
    "user": {
      "login": "fabn",
      "id": 324213,
      "avatar_url": "https://avatars.githubusercontent.com/u/324213?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fabn",
      "html_url": "https://github.com/fabn",
      "followers_url": "https://api.github.com/users/fabn/followers",
      "following_url": "https://api.github.com/users/fabn/following{/other_user}",
      "gists_url": "https://api.github.com/users/fabn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fabn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fabn/subscriptions",
      "organizations_url": "https://api.github.com/users/fabn/orgs",
      "repos_url": "https://api.github.com/users/fabn/repos",
      "events_url": "https://api.github.com/users/fabn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fabn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-10-23T15:14:48Z",
    "updated_at": "2013-10-23T15:14:48Z",
    "closed_at": null,
    "body": "In the readme there is this example for sharded connections\r\n\r\n```ruby\r\nclass Text < ActiveRecord::Base\r\n  db_magic :sharded => {\r\n    :key => :id,\r\n    :sharded_connection => :texts\r\n  }\r\nend\r\n```\r\n\r\nWhat is the meaning of `:key` parameter? I saw that it's not used at all in [setup_sharding_magic](https://github.com/kovyrin/db-charmer/blob/master/lib/db_charmer/active_record/db_magic.rb#L53) method\r\n\r\nI assumed that the usage of that field is to compute the shard before saving or when retrieving records, something like \r\n\r\n```ruby\r\nSHARDING_MAP = {\r\n  'US'  => :us_users,\r\n  'CA'  => :ca_users,\r\n  :default  => :other_users\r\n}\r\n\r\nDbCharmer::Sharding.register_connection(\r\n  :name => :users,\r\n  :method => :hash_map,\r\n  :map => SHARDING_MAP\r\n)\r\n\r\nclass User < ActiveRecord::Base\r\n  db_magic :sharded => {\r\n    :key => :locale,\r\n    :sharded_connection => :users\r\n  }\r\nend\r\n```\r\n\r\nAnd then when creating users\r\n\r\n```ruby\r\nUser.new(locale: 'US').save # this goes to us_users shard\r\nUser.new(locale: 'CA').save # this goes to ca_users shard\r\n```\r\n\r\nBut this kind of code is not working at all, shard must be selected manually before any operation. Am I right? \r\n\r\nIn that case what is the meaning of sharding? The same effect can (almost) be achieved with normal `on_db` method calls?"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/80",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/80/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/80/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/80/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/80",
    "id": 21106472,
    "number": 80,
    "title": "Bump rails to 3.2.15",
    "user": {
      "login": "arthurnn",
      "id": 833383,
      "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurnn",
      "html_url": "https://github.com/arthurnn",
      "followers_url": "https://api.github.com/users/arthurnn/followers",
      "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurnn/orgs",
      "repos_url": "https://api.github.com/users/arthurnn/repos",
      "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-10-16T20:13:02Z",
    "updated_at": "2013-10-16T20:13:33Z",
    "closed_at": "2013-10-16T20:13:33Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/80",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/80",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/80.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/80.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/79",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/79/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/79/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/79/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/79",
    "id": 19604764,
    "number": 79,
    "title": "Connection not switching connection consistantly.",
    "user": {
      "login": "tysliu",
      "id": 68217,
      "avatar_url": "https://avatars.githubusercontent.com/u/68217?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tysliu",
      "html_url": "https://github.com/tysliu",
      "followers_url": "https://api.github.com/users/tysliu/followers",
      "following_url": "https://api.github.com/users/tysliu/following{/other_user}",
      "gists_url": "https://api.github.com/users/tysliu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tysliu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tysliu/subscriptions",
      "organizations_url": "https://api.github.com/users/tysliu/orgs",
      "repos_url": "https://api.github.com/users/tysliu/repos",
      "events_url": "https://api.github.com/users/tysliu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tysliu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2013-09-17T09:49:32Z",
    "updated_at": "2013-11-14T03:45:53Z",
    "closed_at": null,
    "body": "Hi,\r\nI'm eager loading an association for a model. for example Model.where('criteria').includes(:some_association)\r\n\r\nThis association is from another database, I'm finding that if the query for Model.where('criteria') takes too long. our view will throw an error telling us ActionView::Template::Error (Mysql2::Error: Table 'database.some_association' doesn't exist.\r\n\r\nIt would be most appreciated if someone can shed some light on this issue!"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/78",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/78/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/78/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/78/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/78",
    "id": 19461002,
    "number": 78,
    "title": "Kill rails 2 support",
    "user": {
      "login": "arthurnn",
      "id": 833383,
      "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurnn",
      "html_url": "https://github.com/arthurnn",
      "followers_url": "https://api.github.com/users/arthurnn/followers",
      "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurnn/orgs",
      "repos_url": "https://api.github.com/users/arthurnn/repos",
      "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-09-13T15:59:17Z",
    "updated_at": "2013-11-10T15:44:43Z",
    "closed_at": "2013-11-10T15:44:43Z",
    "body": "If @kovyrin is ok with this idea, I can submit a PR to cleaning up code that is there only because of rails 2.\r\nThoughts on that?"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/77",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/77/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/77/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/77/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/77",
    "id": 19411140,
    "number": 77,
    "title": "Rescue error on drop database on the main db",
    "user": {
      "login": "arthurnn",
      "id": 833383,
      "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurnn",
      "html_url": "https://github.com/arthurnn",
      "followers_url": "https://api.github.com/users/arthurnn/followers",
      "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurnn/orgs",
      "repos_url": "https://api.github.com/users/arthurnn/repos",
      "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-09-12T20:02:28Z",
    "updated_at": "2013-10-16T20:08:52Z",
    "closed_at": "2013-10-16T20:08:52Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/77",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/77",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/77.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/77.patch"
    },
    "body": "we have this type of config:\r\n\r\n```ruby\r\ndevelopment: &development\r\n  database: foo\r\n\r\nbenchmark: &benchmark\r\n  database: foo\r\n```\r\n\r\nwhen dropping all it throws an exception as foo was dropped already. "
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/76",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/76/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/76/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/76/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/76",
    "id": 19410987,
    "number": 76,
    "title": "Update .travis.yml",
    "user": {
      "login": "arthurnn",
      "id": 833383,
      "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurnn",
      "html_url": "https://github.com/arthurnn",
      "followers_url": "https://api.github.com/users/arthurnn/followers",
      "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurnn/orgs",
      "repos_url": "https://api.github.com/users/arthurnn/repos",
      "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-12T19:59:31Z",
    "updated_at": "2013-09-12T20:23:12Z",
    "closed_at": "2013-09-12T20:22:48Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/76",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/76",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/76.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/76.patch"
    },
    "body": "use RAILS_VERSION=3.2.14 on travis."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/75",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/75/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/75/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/75/events",
    "html_url": "https://github.com/kovyrin/db-charmer/pull/75",
    "id": 19130612,
    "number": 75,
    "title": "Update rails version limits to 3.2.14",
    "user": {
      "login": "beedub",
      "id": 102646,
      "avatar_url": "https://avatars.githubusercontent.com/u/102646?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beedub",
      "html_url": "https://github.com/beedub",
      "followers_url": "https://api.github.com/users/beedub/followers",
      "following_url": "https://api.github.com/users/beedub/following{/other_user}",
      "gists_url": "https://api.github.com/users/beedub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beedub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beedub/subscriptions",
      "organizations_url": "https://api.github.com/users/beedub/orgs",
      "repos_url": "https://api.github.com/users/beedub/repos",
      "events_url": "https://api.github.com/users/beedub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beedub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-09-06T21:56:18Z",
    "updated_at": "2013-09-06T21:58:53Z",
    "closed_at": "2013-09-06T21:58:48Z",
    "pull_request": {
      "url": "https://api.github.com/repos/kovyrin/db-charmer/pulls/75",
      "html_url": "https://github.com/kovyrin/db-charmer/pull/75",
      "diff_url": "https://github.com/kovyrin/db-charmer/pull/75.diff",
      "patch_url": "https://github.com/kovyrin/db-charmer/pull/75.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/74",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/74/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/74/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/74/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/74",
    "id": 16779471,
    "number": 74,
    "title": "hasone relationship does not seem to work with db-charmer",
    "user": {
      "login": "bobbarjung",
      "id": 1243200,
      "avatar_url": "https://avatars.githubusercontent.com/u/1243200?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobbarjung",
      "html_url": "https://github.com/bobbarjung",
      "followers_url": "https://api.github.com/users/bobbarjung/followers",
      "following_url": "https://api.github.com/users/bobbarjung/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobbarjung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobbarjung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobbarjung/subscriptions",
      "organizations_url": "https://api.github.com/users/bobbarjung/orgs",
      "repos_url": "https://api.github.com/users/bobbarjung/repos",
      "events_url": "https://api.github.com/users/bobbarjung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobbarjung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-15T21:16:41Z",
    "updated_at": "2014-06-11T21:06:07Z",
    "closed_at": null,
    "body": "I have a has_one relationship between A and B\r\n\r\n```ruby\r\nclass A < ActiveRecord::Base\r\n  has_one b\r\nend\r\n\r\nclass B < ActiveRecord::Base\r\n  belongs_to a\r\nend\r\n```\r\n\r\nI want to access the associations on a secondary db. (Called recovery) using db-charmer.\r\n\r\n```ruby\r\nb = B.on_db(:recovery).find(b_id) # works\r\nb.on_db(:recovery).a # works. a is not nil.\r\n\r\na = A.on_db(:recovery).find(a_id) # works.\r\na.on_db(:recovery).b # does not work,\r\n```\r\n...as it tries to lookup the main db and not the recovery database for the reverse lookup. I am guessing has_many also will not work? I am using db-charmer version 1.8.4.\r\n\r\nThank you for your help."
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/73",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/73/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/73/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/73/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/73",
    "id": 16121766,
    "number": 73,
    "title": "Multi-Threading: with_remapped_databases fails to remap classes",
    "user": {
      "login": "chadrem",
      "id": 22150,
      "avatar_url": "https://avatars.githubusercontent.com/u/22150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chadrem",
      "html_url": "https://github.com/chadrem",
      "followers_url": "https://api.github.com/users/chadrem/followers",
      "following_url": "https://api.github.com/users/chadrem/following{/other_user}",
      "gists_url": "https://api.github.com/users/chadrem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chadrem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chadrem/subscriptions",
      "organizations_url": "https://api.github.com/users/chadrem/orgs",
      "repos_url": "https://api.github.com/users/chadrem/repos",
      "events_url": "https://api.github.com/users/chadrem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chadrem/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/kovyrin/db-charmer/labels/reproducible-issue",
        "name": "reproducible-issue",
        "color": "e10c02"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-06-28T00:27:00Z",
    "updated_at": "2014-06-11T21:01:35Z",
    "closed_at": "2014-06-11T21:01:35Z",
    "body": "I started digging into the problem and noticed that new threads are unable to find the map.  Because of this, no classes get re-mapped and thus look for data in the wrong database.\r\n\r\n#### Main thread works correctly (it finds the map).\r\n>> puts ::ActiveRecord::Base.db_charmer_database_remappings.inspect\r\n{:limbo=>:realm_0}\r\n\r\n#### New threads don't work (unable to find the above map).\r\n>> Thread.new { puts ::ActiveRecord::Base.db_charmer_database_remappings.inspect }\r\n{}"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/72",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/72/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/72/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/72/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/72",
    "id": 15789793,
    "number": 72,
    "title": "Difference in schemas between master and slave affects whole app.",
    "user": {
      "login": "andriytyurnikov",
      "id": 3668,
      "avatar_url": "https://avatars.githubusercontent.com/u/3668?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andriytyurnikov",
      "html_url": "https://github.com/andriytyurnikov",
      "followers_url": "https://api.github.com/users/andriytyurnikov/followers",
      "following_url": "https://api.github.com/users/andriytyurnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/andriytyurnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andriytyurnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andriytyurnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/andriytyurnikov/orgs",
      "repos_url": "https://api.github.com/users/andriytyurnikov/repos",
      "events_url": "https://api.github.com/users/andriytyurnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andriytyurnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-06-20T09:39:08Z",
    "updated_at": "2013-11-10T15:49:36Z",
    "closed_at": "2013-11-10T15:49:36Z",
    "body": "We had long-running migration on db master (lhm gem), and as one might expect there was some delay between master and slave.\r\nSo when migration finished on master, but was in progress on slave - we had different schemas.\r\nUnexpected surprise is that this difference affected parts of the app which do not use slave connection.\r\n\r\nMysql2::Error: Unknown column 'referrer' in 'field list': INSERT INTO `purchases` (`coupon_code`, `created_at`, `customer_id`, `dont_redeem`, `email`, `encrypted_email`, `ip_address`, `order_date`, `order_number`, `referrer`, `site_id`, `subtotal`, `updated_at`, `visitor_id`) VALUES ('CODE42', '2013-06-19 12:19:51', NULL, 0, 'email@gmail.com', NULL, '127.0.0.1', '2013-06-19 12:19:51', '100379070', NULL, 1887, 123.2, '2013-06-19 12:19:51', 26179393)\r\n\r\nAt the moment of the exception raise referrer column was present on master, but was not present on slave. Unexpected surprise here, is that controller, which raised this exception does not use db-charmer slave. Somehow db-charmer slave connection affects operations on master connection (schema info cached somewhere by activerecord?)"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/71",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/71/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/71/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/71/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/71",
    "id": 15777336,
    "number": 71,
    "title": "Forcing writes to master in bang methods (create!, etc)",
    "user": {
      "login": "kpumuk",
      "id": 10163,
      "avatar_url": "https://avatars.githubusercontent.com/u/10163?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpumuk",
      "html_url": "https://github.com/kpumuk",
      "followers_url": "https://api.github.com/users/kpumuk/followers",
      "following_url": "https://api.github.com/users/kpumuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpumuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpumuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpumuk/subscriptions",
      "organizations_url": "https://api.github.com/users/kpumuk/orgs",
      "repos_url": "https://api.github.com/users/kpumuk/repos",
      "events_url": "https://api.github.com/users/kpumuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpumuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/kovyrin/db-charmer/labels/reproducible-issue",
        "name": "reproducible-issue",
        "color": "e10c02"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-06-20T01:27:59Z",
    "updated_at": "2013-06-20T01:31:16Z",
    "closed_at": null,
    "body": "Currently db-charmer forces writes to master for `create`, `update`, `delete`, and some other ActiveRecord methods. Unfortunately, `create!` does not get forced to use master:\r\n\r\n    ree-1.8.7-2012.02 >> TestModel.on_db(:slave).create\r\n      SQL (0.2ms)   BEGIN\r\n    \r\n    ree-1.8.7-2012.02 >> TestModel.on_db(:slave).create!\r\n      [slave]   SQL (0.1ms)   BEGIN\r\n\r\nIt seems like problematic code is in `master_slave_routing.rb` for Rails 2.x"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/70",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/70/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/70/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/70/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/70",
    "id": 15004735,
    "number": 70,
    "title": "Support for sharing a connection to same server / switching databases as necessary",
    "user": {
      "login": "boourns",
      "id": 699550,
      "avatar_url": "https://avatars.githubusercontent.com/u/699550?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boourns",
      "html_url": "https://github.com/boourns",
      "followers_url": "https://api.github.com/users/boourns/followers",
      "following_url": "https://api.github.com/users/boourns/following{/other_user}",
      "gists_url": "https://api.github.com/users/boourns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boourns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boourns/subscriptions",
      "organizations_url": "https://api.github.com/users/boourns/orgs",
      "repos_url": "https://api.github.com/users/boourns/repos",
      "events_url": "https://api.github.com/users/boourns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boourns/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-31T17:41:34Z",
    "updated_at": "2013-05-31T18:48:02Z",
    "closed_at": null,
    "body": "We're considering putting multiple logical databases on the same physical server.  \r\n\r\nIf we do that we will hit an issue where every app worker will have many connections to the same mysql server and reach the point of having context switching issues from the mysql perspective.\r\n\r\nWhat do you think about reusing db_charmer connections when there is multiple logical databases on the same physical server?\r\n\r\nIf this is not something you can add we may be doing it at Shopify and would be interested in your view on this & what you would consider to be the best approach.\r\n\r\nThanks\r\nTom"
  },
  {
    "url": "https://api.github.com/repos/kovyrin/db-charmer/issues/69",
    "labels_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/69/labels{/name}",
    "comments_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/69/comments",
    "events_url": "https://api.github.com/repos/kovyrin/db-charmer/issues/69/events",
    "html_url": "https://github.com/kovyrin/db-charmer/issues/69",
    "id": 14541052,
    "number": 69,
    "title": "execution expired - timing out getting connections - multi-threading issue",
    "user": {
      "login": "dashbitla",
      "id": 114106,
      "avatar_url": "https://avatars.githubusercontent.com/u/114106?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dashbitla",
      "html_url": "https://github.com/dashbitla",
      "followers_url": "https://api.github.com/users/dashbitla/followers",
      "following_url": "https://api.github.com/users/dashbitla/following{/other_user}",
      "gists_url": "https://api.github.com/users/dashbitla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dashbitla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dashbitla/subscriptions",
      "organizations_url": "https://api.github.com/users/dashbitla/orgs",
      "repos_url": "https://api.github.com/users/dashbitla/repos",
      "events_url": "https://api.github.com/users/dashbitla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dashbitla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-20T21:43:35Z",
    "updated_at": "2013-11-10T15:52:05Z",
    "closed_at": "2013-11-10T15:52:05Z",
    "body": "2013-05-20T21:29:11Z 6058 TID-osusvs4o8 WARN: execution expired\r\n2013-05-20T21:29:11Z 6058 TID-osusvs4o8 WARN: /home/deployer/.rvm/rubies/ruby-1.9.3-p429/lib/ruby/1.9.1/monitor.rb:185:in `lock'\r\n/home/deployer/.rvm/rubies/ruby-1.9.3-p429/lib/ruby/1.9.1/monitor.rb:185:in `mon_enter'\r\n/home/deployer/.rvm/rubies/ruby-1.9.3-p429/lib/ruby/1.9.1/monitor.rb:209:in `mon_synchronize'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/activerecord-3.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:95:in `connection'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/activerecord-3.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:404:in `retrieve_connection'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/activerecord-3.2.8/lib/active_record/connection_adapters/abstract/connection_specification.rb:170:in `retrieve_connection'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/activerecord-3.2.8/lib/active_record/connection_adapters/abstract/connection_specification.rb:144:in `connection'\r\n/home/deployer/apps/testapp.com/releases/20130519223524/vendor/gems/db-charmer-1.9.0/lib/db_charmer/active_record/connection_switching.rb:34:in `connection_with_magic'\r\n/home/deployer/apps/testapp.com/releases/20130519223524/vendor/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation_method.rb:15:in `block in relation_with_db_charmer'\r\n/home/deployer/apps/testapp.com/releases/20130519223524/vendor/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation_method.rb:14:in `tap'\r\n/home/deployer/apps/testapp.com/releases/20130519223524/vendor/gems/db-charmer-1.9.0/lib/db_charmer/rails3/active_record/relation_method.rb:14:in `relation_with_db_charmer'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/activerecord-3.2.8/lib/active_record/scoping/named.rb:37:in `scoped'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/activerecord-3.2.8/lib/active_record/querying.rb:9:in `select'\r\n/home/deployer/apps/testapp.com/releases/20130519223524/app/models/api_callback.rb:12:in `push'\r\n/home/deployer/apps/testapp.com/releases/20130519223524/app/workers/kiq_agent_callback.rb:9:in `perform'\r\n/home/deployer/apps/testapp.com/shared/bundle/ruby/1.9.1/gems/sidekiq-2.9.0/lib/sidekiq/processor.rb:49:in `block (3 levels)\r\n\r\n"
  }
]
